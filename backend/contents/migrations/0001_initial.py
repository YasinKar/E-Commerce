# Generated by Django 5.1.4 on 2024-12-22 19:44

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200, verbose_name='Email')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='ElectronicSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('image', models.ImageField(upload_to='e_symbols', verbose_name='Image')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Electronic Symbol',
                'verbose_name_plural': 'Electronic Symbols',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=300, verbose_name='Domain')),
                ('site_name', models.CharField(max_length=100, verbose_name='Site name')),
                ('site_logo', models.ImageField(upload_to='site_logo', verbose_name='Site logo')),
                ('site_icon', models.ImageField(blank=True, null=True, upload_to='site_icon', verbose_name='Site icon')),
                ('site_about', models.TextField(verbose_name='About us')),
                ('rules', models.TextField(verbose_name='Rules')),
                ('github', models.URLField(blank=True, max_length=400, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Github URL starting with https://github.com/', regex='^https://github\\.com/.*$')], verbose_name='Github')),
                ('twitter', models.URLField(blank=True, max_length=400, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Twitter URL starting with https://twitter.com/', regex='^https://twitter\\.com/.*$')], verbose_name='Twitter')),
                ('linkedin', models.URLField(blank=True, max_length=400, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Linkedin URL starting with https://www.linkedin.com/', regex='^https://www\\.linkedin\\.com/.*$')], verbose_name='Linkedin')),
                ('instagram', models.URLField(blank=True, max_length=400, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Instagram URL starting with https://www.instagram.com/', regex='^https://www\\.instagram\\.com/.*$')], verbose_name='Instagram')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Email')),
                ('copyright', models.CharField(default='&#169;کلیه حقوق محفوظ است', max_length=200, null=True, verbose_name='Copyright')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Maintenance mode')),
                ('is_main_setting', models.BooleanField(default=False, verbose_name='Main setting')),
            ],
            options={
                'verbose_name': 'Site Setting',
                'verbose_name_plural': 'Site Settings',
            },
        ),
    ]
