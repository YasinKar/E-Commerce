# Generated by Django 5.1.6 on 2025-04-14 19:26

import colorfield.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('logo', models.ImageField(upload_to='brands', verbose_name='Logo')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(max_length=100, unique=True, verbose_name='Color name')),
                ('color_code', colorfield.fields.ColorField(default='#fff', image_field=None, max_length=25, samples=None, verbose_name='Color code')),
            ],
            options={
                'verbose_name': 'Product Color',
                'verbose_name_plural': 'Products Colors',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products-gallery', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Products Images',
            },
        ),
        migrations.CreateModel(
            name='ProductInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='Key')),
                ('value', models.CharField(max_length=100, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Product Information',
                'verbose_name_plural': 'Products Informations',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=100, unique=True, verbose_name='Size')),
            ],
            options={
                'verbose_name': 'Product Size',
                'verbose_name_plural': 'Products Sizes',
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=200, verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Category')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('image', models.ImageField(upload_to='categories', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_percentage', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Discount Percentage')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='products.category', verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Name')),
                ('price', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10000000), django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('image', models.ImageField(upload_to='products', verbose_name='Image')),
                ('description', models.TextField(max_length=800, verbose_name='Description')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('None', 'None')], default='None', max_length=100, verbose_name='Gender')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('stars', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Stars')),
                ('inventory', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(1)], verbose_name='Inventory')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.category', verbose_name='Category')),
                ('colors', models.ManyToManyField(blank=True, to='products.productcolor', verbose_name='Product colors')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('recommend', models.BooleanField(default=True, verbose_name='Recommend')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Likes')),
                ('dislikes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Dislikes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='products.product', verbose_name='Product')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='products.productcomment', verbose_name='Reply')),
            ],
            options={
                'verbose_name': 'Product Comment',
                'verbose_name_plural': 'Products Comments',
            },
        ),
    ]
